{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "testscript",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#commands"
		},
		{
			"include": "#files"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.number-sign.testscript",
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.testscript"
						}
					},
					"end": "$"
				}
			]
		},
		"commands": {
			"patterns": [
				{
					"name": "support.command.testscript",
					"begin": "^(\\[(!)?(.*?)\\])?(?:\\s*(!))?(?:\\s*(\\w\\S*))",
					"beginCaptures": {
						"2": {
							"name": "operator.testscript"
						},
						"3": {
							"name": "variable.testscript"
						},
						"4": {
							"name": "operator.testscript"
						},
						"5": {
							"name": "keyword.control.testscript"
						}
					},
					"end": "(?:(&)\\s*)?$",
					"endCaptures": {
						"1": {
							"name": "operator.testscript"
						}
					},
					"patterns": [
						{
							"include": "#strings"
						},
						{
							"include": "#variables"
						}
					]
				}
			]
		},
		"files": {
			"patterns": [
				{
					"begin": "^-- (\\S+\\.(?:bash|sh)) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^-- |\\z)",
					"contentName": "meta.embedded.block.shellscript",
					"patterns": [
						{
							"include": "source.shell"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.(?:bat|cmd)) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.bat"
						}
					},
					"end": "(?=^-- |\\z)",
					"contentName": "meta.embedded.block.bat",
					"patterns": [
						{
							"include": "source.batchfile"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.diff) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.diff"
						}
					},
					"end": "(?=^-- |\\z)",
					"contentName": "meta.embedded.block.diff",
					"patterns": [
						{
							"include": "source.diff"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.go) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.go",
					"patterns": [
						{
							"include": "source.go"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.html) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.html",
					"patterns": [
						{
							"include": "source.html"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.json) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.json",
					"patterns": [
						{
							"include": "source.json"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.toml) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.toml",
					"patterns": [
						{
							"include": "source.toml"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.md) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.markdown",
					"patterns": [
						{
							"include": "text.html.markdown"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.pl) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.perl",
					"patterns": [
						{
							"include": "source.perl"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.proto) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.proto",
					"patterns": [
						{
							"include": "source.proto"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.ps1) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.powershell",
					"patterns": [
						{
							"include": "source.powershell"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.py) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.python",
					"patterns": [
						{
							"include": "source.python"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.rb) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.ruby",
					"patterns": [
						{
							"include": "source.ruby"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.txt) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.plaintext"
				},
				{
					"begin": "^-- (\\S+\\.tmpl) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.go-template",
					"patterns": [
						{
							"include": "source.go-template"
						}
					]
				},
				{
					"begin": "^-- (\\S+\\.yaml) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "meta.embedded.block.yaml",
					"patterns": [
						{
							"include": "source.yaml"
						}
					]
				},
				{
					"begin": "^-- (\\S+) --$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.section.testscript"
						}
					},
					"end": "(?=^--|\\z)",
					"contentName": "string.unquoted.testscript"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.single.testscript",
					"begin": "'",
					"end": "'"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.testscript",
					"match": "\\$\\w+"
				},
				{
					"name": "variable.testscript",
					"match": "\\$\\{.*?\\}"
				}
			]
		}
	},
	"scopeName": "source.testscript"
}